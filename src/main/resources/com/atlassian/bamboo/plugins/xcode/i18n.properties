xcode.general = General

xcode.executableName = Xcode
xcode.pathHelp =  For example, 'iphoneos8.3', 'iphoneos', 'iphonesimulator8.3'. You can find the available SDKs on Mac OS X by running `xcodebuild -showsdks` in Terminal.app.

xcode.sdk = Apple SDK
xcode.sdk.error = You must choose an SDK
xcode.sdk.description = For example, 'iphoneos8.3', 'iphoneos', 'iphonesimulator8.3'. You can find the available SDKs on Mac OS X by running `xcodebuild -showsdks` in Terminal.app.
xcode.clean = Clean the project before building

xcode.project = Project

xcode.workspace = Workspace
xcode.workspace.description = Name of the Xcode Workspace to build. First ensure that you share the workspace within Xcode otherwise the build may fail with an error.

xcode.scheme = Scheme
xcode.scheme.description = Name of the Xcode Scheme to build. Required when using a workspace.
xcode.scheme.error = If you specify a Workspace then you must also specify a Scheme. 

xcode.buildall = Build all targets

xcode.target = Target
xcode.target.description = The name of the Xcode target to build

xcode.configuration = Configuration
xcode.configuration.description = The name of the Xcode configuration to build

xcode.logfile = Logfile
xcode.logfile.description = Path of a file where the output of xcodebuild will be stored

xcode.cleanLogfile = Clean Logfile
xcode.cleanLogfile.description = Clean logfile before appending

xcode.custom.parameters = Custom parameters
xcode.custom.parameters.description = Custom parameters to pass to the xcodebuild process. See xcodebuild --help.

xcode.arch = Architecture
xcode.arch.description = Name of the architecture to build (e.g. i386).

xcode.sdk.name = SDK name
xcode.sdk.name.description = The name of the SDK eg "iOS 4.2" or "Mac OS X 10.7"
xcode.sdk.name.error = No SDK name specified

xcode.sdk.label = SDK label
xcode.sdk.label.description = For example, 'macosx10.6', 'macosx10.7' or 'iphoneos4.3'. You can find the available SDKs on Mac OS X by running `xcodebuild -showsdks` in Terminal.app.
xcode.sdk.label.error = No SDK label specified

xcode.testing = Testing
xcode.run_in_ios_sim = Run tests in iOS simulator
xcode.run_in_ios_sim.description = Requires a <a href="https://confluence.atlassian.com/x/KQAfFQ">modification to a post-build script</a> in the Xcode project
xcode.reset_simulator = Enable RESET_IOS_SIMULATOR variable
xcode.reset_simulator.description = Set an environment variable to signal simulator reset message to Xcode/Command Line Tool

xcode.test_sim = Simulator to run test
xcode.test_sim.description = e.g. 'platform=iOS Simulator,name=iPhone 6,OS=8.3'
xcode.ocunit = Report OCUnit test results
xcode.ocunit.description = If you use SenTestKit or OCUnit, checking this option will store the test results in Bamboo

xcode.xctest = Report XCTest test results
xcode.xctest.description = If using XCTest (Xcode 5+), checking this option will store the test results in Bamboo

xcode.bundleVersion = Do you want Bamboo to automatically set the bundle version?
xcode.bundleVersionValue = Bundle Version

xcode.marketingVersion = Do you want Bamboo to automatically set the marketing version?
xcode.marketingVersionValue = Marketing Version

xcode.ios = iOS development
xcode.build_ipa = Build an .ipa for iOS Application Distribution

xcode.app_path = iOS application path
xcode.app_path.description = Absolute path to the iOS application. Eg. /.../Library/Developer/Xcode/DerivedData/app-example-123
xcode.app_path.error = iOS application path is required

xcode.identity = Certificate identity Name
xcode.identity.description = Certificate Identity Name used to sign the application.

xcode.provisioning_profile = Provisioning Profile 
xcode.provisioning_profile.description = The UUID of the provisioning profile to embed. Note: If profile intended use does not match distribution method below an error will ensure.
xcode.provisioning_profile.error = Provisioning Profile is required

xcode.bundle_identifier = Bundle Identifier 
xcode.bundle_identifier.description = The application bundle ID, e.g. com.apple.appname
xcode.bundle_identifier.error = Bundle Identifier is required

xcode.development_team = Development Team
xcode.development_team.description = The Development Team identifier (10 alpha numeric characters long). Variously described elsewhere (Team ID, App Prefix). Labelled App ID Prefix in the Apple Developer Portal.
xcode.development_team.error = Development Team is required

xcode.distribution_method = Distribution Method 
xcode.distribution_method.description = The Distribution Method. 
xcode.distribution_method.error = Selection of a Distribution Method is required

xcode.upload_symbols = Upload Symbols 
xcode.upload_symbols.description = Include symbols in the generated ipa file.

xcode.upload_bitcode = Upload Bitcode 
xcode.upload_bitcode.description = Include bitcode in the generated ipa file.

xcode.advanced = Advanced

keychain.name = Keychain
keychain.name.description = Name of the Keychain to unlock or the fully qualified path to a .keychain file. If not specified, Bamboo will append the .keychain extension to this value.
keychain.name.error = Keychain name is not specified

keychain.password = Password
keychain.password.description = Password of the Keychain to unlock
keychain.changePassword = Change password?

keychain.setAsDefault = Set as default keychain
keychain.setAsDefault.description = Sets the default keychain to this keychain. Useful in conjunction with code signing. Note: This operation changes the environment of the Mac OS X user account that is running the Bamboo build agent.

keychain.newPassword = New Password
keychain.newPassword.description = What is the new password for the Keychain?

hockey.apitoken = API Token
hockey.apitoken.description = Your API token for HockeyApp.
hockey.apitoken.error = You must specify an API Token!

hockey.download = Download

hockey.dsym = .dSYM.zip File
hockey.dsym.description = (Optional) Relative path to .dSYM.zip file.

hockey.ipa = .ipa File
hockey.ipa.description = Relative path to .ipa file.
hockey.ipa.error = You must specify an .ipa file!

hockey.notes = Release Notes
hockey.notes.description = (Optional) Please enter the release notes as Textile.

hockey.tags = Tags
hockey.tags.description = (Optional) Restrict downloads by entering a comma-separated list of tags 

hockey.notify = Notify

testflight.api_token = API Token
testflight.api_token.description = TestFlightApp.com API Token
testflight.api_token.error = You must specify an API Token

testflight.team_token = Team Token
testflight.team_token.description = Token for the team being uploaded to
testflight.team_token.error = You must specify an Team Token

testflight.file = IPA file
testflight.file.description = The IPA File to distribute
testflight.file.error = You must specify an IPA file

testflight.dsym = Zipped .dsym File
testflight.dsym.description = The zipped .dSYM corresponding to the build

testflight.notes = Release Notes
testflight.notes.description = Release notes for the build
testflight.notes.error = You must specify a release note

testflight.distribution_lists = Distribution Lists
testflight.distribution_lists.description = Comma separated distribution list names which will receive access to the build

testflight.notify = Notify
testflight.notify.description = Notify permitted teammates to install the build

testflight.replace = Replace Version
testflight.replace.description = Replace binary for an existing build if one is found with the same name/bundle version

testflight.moreinfo = For more information see the <a href="http://testflightapp.com/api/doc/">TestFlightApp.com Upload API</a>

test.logFile = Log File
test.logFile.error = You must specify build output log file

system.builder.fastlane.fastlane = Fastlane
fastlane.executableName = Fastlane
fastlane.error.undefinedExecutable = The Fastlane executable has not been defined
fastlane.lane = Lane
fastlane.lane.description = The lane you want to execute. Here you can also define Fastlane properties such as param:paramValue.
fastlane.lane.error = You must specify which lane should be executed.
fastlane.pathHelp = Path to the Fastlane executable
fastlane.env = Environment variables
fastlane.env.description = Extra environment variables e.g. HOCKEYAPP_API_TOKEN="your-hockey-api-token". You can add multiple parameters separated by a space.
fastlane.junit.report.info = If your lane produces tests output, make sure it outputs test report in a JUnit format. You can achieve it by adding the following line to the Scanfile:
fastlane.junit.learn.more = Learn more
fastlane.junit.learn.more.link = Fastlane